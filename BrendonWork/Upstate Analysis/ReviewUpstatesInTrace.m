function ReviewUpstatesInTrace(potups,data,tn,invisiblefig,outputname)% function ups=ReviewUpstatesInTrace(potups,data,tn);% This function presents the user with potential upstates that have been% found by "findupstates" (potups) in tracenumber (tn) of data, in the % context of electrophysiological traces (data).  % Invisible fig will be closed when function is done, to allow timed% receipt of the outputvariable with "outputname" into the caller workspace%have capacity to go back and forth if you do or don't want to throw%something away in retrospect... have a few buttonshandles.fig=figure('units','normalized','position',[0 .02 .9 .9]);assignin('caller','closedproperly',0);handles.inups=potups;%inputhandles.outups=potups;%for changing and outputsetappdata(handles.fig,'data',data);handles.datalength=length(data);handles.tracenumber=tn;handles.invisiblefig=invisiblefig;handles.outputname=outputname;clear data potups tn invisiblefig outputname%memory managementhandles.deleted=zeros(1,size(handles.inups,1));handles.axes=axes('YLim',[-85 30],'units','normalized','position',[.13 .19 .7750 .8]);handles.finishbutton=uicontrol('style','pushbutton',...    'units','normalized',...    'position',[.87 .015 .12 .08],...    'parent',handles.fig,...    'string','Finish',...    'callback',@FinishButtonFcn);handles.nextbutton=uicontrol('style','pushbutton',...    'units','normalized',...    'position',[.74 .015 .12 .08],...    'parent',handles.fig,...    'string','Next',...    'callback',@NextButtonFcn);handles.lastbutton=uicontrol('style','pushbutton',...    'units','normalized',...    'position',[.61 .015 .12 .08],...    'parent',handles.fig,...    'string','Last',...    'callback',@LastButtonFcn);handles.deletebutton=uicontrol('style','pushbutton',...    'units','normalized',...    'position',[.01 .015 .12 .08],...    'parent',handles.fig,...    'string','Delete',...    'callback',@DeleteButtonFcn);handles.undeletebutton=uicontrol('style','pushbutton',...    'units','normalized',...    'position',[.14 .015 .12 .08],...    'parent',handles.fig,...    'string','Undelete',...    'callback',@UndeleteButtonFcn);handles.addbutton=uicontrol('style','pushbutton',...    'units','normalized',...    'position',[.27 .015 .12 .08],...    'parent',handles.fig,...    'string','Add UPstate',...    'callback',@AddButtonFcn);handles.resetupbutton=uicontrol('style','pushbutton',...    'units','normalized',...    'position',[.4 .015 .12 .08],...    'parent',handles.fig,...    'string','Reset UP',...    'callback',@ResetUpButtonFcn);handles.whichup=1;handles=drawtraces(handles);handles=drawmarkers(handles);guidata(handles.fig,handles);%%function handles=drawtraces(handles);data=getappdata(handles.fig,'data');if isfield(handles,'lines');    if ~isempty(handles.lines);        delete(handles.lines);    endendif isfield(handles,'thisline');    if ~isempty(handles.thisline);      delete(handles.thisline);    endendhold onset(handles.axes,'XLim',[0 length(data)])for a=1:size(data,2);%draw all other traces simultaneous to the one we want    if median(data(:,a))<-55 & median(data(:,a))>-85        if a~=handles.tracenumber;            handles.lines(a)=line(1:size(data,1),data(:,a),...                'color',[.6 .6 .6],...                'HitTest','Off',...                'Parent',handles.axes);        end    endendhandles.thisline=line(1:size(data,1),...    data(:,handles.tracenumber),...    'color','b',...    'HitTest','Off',...    'Parent',handles.axes);%%function handles=drawmarkers(handles);data=getappdata(handles.fig,'data');d=handles.whichup;ups=handles.outups;if isfield(handles,'othermarkers');    if ~isempty(handles.othermarkers);        delete(handles.othermarkers);    endendif isfield(handles,'thesemarkers');    if ~isempty(handles.thesemarkers);        delete(handles.thesemarkers);    endendhold on%% plot markershandles.othermarkers=[];handles.thesemarkers=[];for e=1:size(ups,1);    if e~=d;%for any upstates not currently at hand...        if ~handles.deleted(e)%if the user hasn't asked to delete it            for f=1:4;                handles.othermarkers(end+1)=line(ups(e,f),...%x                    data(ups(e,f),handles.tracenumber),...%y                    'Marker','o',...                    'MarkerSize',8,...                    'color','g');%draw in green            end        end    endendfor g=1:4;%using d=the upstate we're interested in... plot each point found    if handles.deleted(d)==0;%if not deleted        mark='o';        col='r';        title('deleted')    else        mark='x';        col=[1 .7 .7];        title('')    end    handles.thesemarkers(end+1)=line(ups(d,g),...%x        data(ups(d,g),handles.tracenumber),...%y        'Marker',mark,...        'MarkerSize',8,...        'LineWidth',1.5,...        'color',col,...%make the selected upstate red        'ButtonDownFcn',@MoveMarker);%and make the marker moveableendif d==size(ups,1)%     set(handles.finishbutton,'Enable','On')    set(handles.nextbutton,'Enable','Off')else%     set(handles.finishbutton,'Enable','Off')    set(handles.nextbutton,'Enable','On')endif d==1;    set(handles.lastbutton,'Enable','Off')else    set(handles.lastbutton,'Enable','On')end%%function MoveMarker(obj,ev);handles=guidata(obj);set(handles.fig,'Pointer','fullcross');[x,y] = ginput(1);%wait until user clicks on a pointx=round(x);set(handles.fig,'Pointer','arrow');thisline=get(handles.thisline,'YData');y=thisline(x);set(obj,'XData',x,'YData',y);drawnow%%function NextButtonFcn(obj,ev)handles=guidata(obj);for a=1:length(handles.thesemarkers);    tempvar(a)=get(handles.thesemarkers(a),'XData');endhandles.outups(handles.whichup,:)=sort(tempvar);handles.whichup=min([handles.whichup+1 size(handles.outups,1)]);handles=drawmarkers(handles);xl=get(handles.axes,'XLim');if ~(xl(1)==0 & xl(2)==handles.datalength);    set(handles.axes,'XLim',[0 handles.datalength])endguidata(handles.fig,handles);%%function LastButtonFcn(obj,ev)handles=guidata(obj);for a=1:length(handles.thesemarkers);    temp(a)=get(handles.thesemarkers(a),'XData');endhandles.outups(handles.whichup,:)=sort(temp);handles.whichup=max([handles.whichup-1 1]);handles=drawmarkers(handles);xl=get(handles.axes,'XLim');if ~(xl(1)==0 & xl(2)==handles.datalength);    set(handles.axes,'XLim',[0 handles.datalength])endguidata(handles.fig,handles);%%function DeleteButtonFcn(obj,ev)handles=guidata(obj);handles.deleted(handles.whichup)=1;handles=drawmarkers(handles);guidata(handles.fig,handles);if handles.whichup<size(handles.inups,1)    NextButtonFcn(obj,ev);end%%function UndeleteButtonFcn(obj,ev)handles=guidata(obj);handles.deleted(handles.whichup)=0;handles=drawmarkers(handles);guidata(handles.fig,handles);%%function AddButtonFcn(obj,ev)handles=guidata(obj);for a=1:length(handles.thesemarkers);%save position of current up    temp(a)=get(handles.thesemarkers(a),'XData');endhandles.outups(handles.whichup,:)=sort(temp);%finshedset(handles.fig,'Pointer','fullcross');%now allow user to pick a spot for a new up[x,y] = ginput(1);%wait until user clicks on a pointx=round(x);set(handles.fig,'Pointer','arrow');thisline=get(handles.thisline,'YData');y=thisline(x);insert=find(handles.outups(:,1)<x);%find which other ups it's betweenif ~isempty(insert);%if an upstate before the place where the user clicked    insert=max(insert)+1;    handles.inups=[handles.inups(1:insert-1,:);[x x+1500 x+3000 x+4500];handles.inups(insert:end,:)];    handles.outups=[handles.outups(1:insert-1,:);[x x+1500 x+3000 x+4500];handles.outups(insert:end,:)];    handles.deleted=[handles.deleted(1:insert-1) 0 handles.deleted(insert:end)];else    insert=1;     handles.inups=[[x x+1500 x+3000 x+4500];handles.inups];    handles.outups=[[x x+1500 x+3000 x+4500];handles.outups];    handles.deleted=[0 handles.deleted];endhandles.whichup=insert;handles=drawmarkers(handles);guidata(handles.fig,handles);%%function ResetUpButtonFcn(obj,ev)handles=guidata(obj);handles.outups(handles.whichup,:)=handles.inups(handles.whichup,:);handles=drawmarkers(handles);guidata(handles.fig,handles);%%function FinishButtonFcn(obj,ev)handles=guidata(obj);for a=1:length(handles.thesemarkers);    temp(a)=get(handles.thesemarkers(a),'XData');endhandles.outups(handles.whichup,:)=sort(temp);out=[];for a=1:length(handles.deleted);    if handles.deleted(a)==0;        out(end+1,:)=handles.outups(a,:);            endendassignin('caller',handles.outputname,out);assignin('caller','closedproperly',1);close(handles.invisiblefig)delete(handles.fig);