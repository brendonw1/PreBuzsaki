function meanvalues=contourvalues(pixels,conts);


masks=contourstomasks(conts,[256 256]);
meanvalues=cellvaluesfrommasks(pixels,masks);
















% % function meanvalues=contourvalues (moviematrix,contoursmatrix)
% % function [meanvalues,outvalues,backgrounds]=contourvalues (moviematrix,contoursmatrix,outconts)
% %!UNDELETE LINES TO MAKE THIS FUNCTION AS THE SECOND OPTION ABOVE
% 
% %normalizes each movie, so that pixel values for each movie range from 0 to
% %1.
% %finds mean value in each contour (from 2D contoursmatrix
% %which is a cell array of coordinates created in "findcells") 
% %in each frame of each movie represented in 4D moviematrix (generated by
% %"framesintomatrix" function).  Output is "meanvalues" which is a 3D matrix
% %of (frames)x(movies)x(cellnumber)
% 
% warning off MATLAB:conversionToLogical;
% 
% % normalized=normalize(moviematrix);
%a normalized version of "moviematrix"
% 
% template=zeros(256);
% for contournumber = 1:(length(contoursmatrix));%for each contour
%     for ycounter=1:256;%for each line in the image
%         yc=ycounter(ones(1,256));
%         in=inpolygon(1:256,yc,contoursmatrix{contournumber}(:,1),contoursmatrix{contournumber}(:,2));%a 1D line of 
% %                                                                             0's and 1's for all x's across 1 y value
% %         inout=inpolygon(1:256,yc,outconts{contournumber}(:,1),outconts{contournumber}(:,2));        
% % 	    in2=find(in==.5);
% % 	    in(in2)=0;
%         inmatrix(ycounter,:)=in;%a matrix of the pixels inside a given contour... 2D by the time the for-loop is over
% %         inoutmatrix(ycounter,:)=inout;
% 	end
%     template=inmatrix+template;%create a template w/ 1's wherever inside a cell, 0 outside... for whole-frame background
%     inmatrix=logical(inmatrix);
% %     inoutmatrix(inmatrix)=0;%eliminate from the outside contour all pixels that are a part of the original contour
% %     inoutmatrix=logical(inoutmatrix);
% %     io(:,:,contournumber)=inoutmatrix;
%     for movienumber=1:size(moviematrix,4);
%         for framenumber=1:size(moviematrix,3);
%             frame=moviematrix(:,:,framenumber,movienumber);
%             meanvalues(framenumber,movienumber,contournumber)=mean(frame(inmatrix));
% %             outvalues(framenumber,movienumber,contournumber)=mean(frame(inoutmatrix));
%         end
% 	end
% end
% 
% % template=~template;%now 1's outside cells, 0s inside
% % template=logical(template);
% % 
% % for movienumber=1:size(moviematrix,4);
% %     for framenumber=1:size(moviematrix,3);
% %         frame=moviematrix(:,:,framenumber,movienumber);
% %         backgrounds(framenumber,movienumber)=mean(frame(template));
% %         for c=1:length(contoursmatrix);
% %             aaa=io(:,:,c);
% %             aaa(~template)=0;
% %             outvalues(framenumber,movienumber,c)=mean(frame(aaa));
% %         end
% %         ef=mean(frame(template));mean of frame
% %         f=(frame(template)-f).^2;
% %         f=sum(frame);
% %     end
% % end