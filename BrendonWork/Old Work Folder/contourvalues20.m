function [values, outvalues, backgrounds]=contourvalues20 (pixels, contoursmatrix, outconts);
% function [values, outvalues, derivvalues, derivoutvalues, backgrounds, template]=contourvalues20 (pixels,contoursmatrix, outconts);

%Takes df/f for each movie
%
%finds mean value in each contour of df/f(from 2D contoursmatrix
%which is a cell array of coordinates created in "findcells") 
%in each frame of each movie represented in 4D moviematrix (generated by
%"framesintomatrix" function).  Output is "meanvalues" which is a 3D matrix
%of (frames)x(movies)x(cellnumber)
tic
warning off MATLAB:conversionToLogical;

% h3=ones(3,3)/9;
% h4=ones(4,4)/16;
% df=diff(pixels,1,3);

% derivmovie=zeros(1);
% for movienumber=1:size(pixels,4);
%     df(:,:,:,movienumber)=diff(pixels(:,:,:,movienumber),1,3);
%     for framenumber=1:(size(pixels,3)-1);
%         derivmovie(:,:,framenumber,movienumber)=imfilter(df(:,:,framenumber,movienumber),h3);%2D filter of frame
%         derivmovie(:,:,framenumber,movienumber)=del2(derivmovie(:,:,framenumber,movienumber));%LaPlacian of frame
%         derivmovie(:,:,framenumber,movienumber)=imfilter(derivmovie(:,:,framenumber,movienumber),h4);%LaPlacian of frame
%     end
% end

template=zeros(256);
for contournumber = 1:(length(contoursmatrix));
    for ycounter=1:256;
        yc=ycounter(ones(1,256));
        in=inpolygon(1:256,yc,contoursmatrix{contournumber}(:,1),contoursmatrix{contournumber}(:,2));%a 1D line of 
%                                                                             0's and 1's for all x's across 1 y value
        inout=inpolygon(1:256,yc,outconts{contournumber}(:,1),outconts{contournumber}(:,2));        
% 	    in(find(in==.5))=0;
        inmatrix(ycounter,:)=in;%a matrix of the pixels inside a given contour... 2D by the time the for-loop is over
        inoutmatrix(ycounter,:)=inout;
	end
    template=inmatrix+template;%create a template w/ 1's wherever inside any cell, 0 outside... for whole-frame background
    inmatrix=logical(inmatrix);
    i(:,:,contournumber)=inmatrix;%matrix of ins for each cell contour
    inoutmatrix(inmatrix)=0;%eliminate from the outside contour all pixels that are a part of the original contour
    inoutmatrix=logical(inoutmatrix);
    io(:,:,contournumber)=inoutmatrix;
    
%     rin=repmat(inmatrix,[1 1 size(df,3) size(df,4)]);
%     rin(find(rin))=df(find(rin));%now have zeros outside cells & pixel values in approp. spots in this cell
%     rin=sum(rin,1);
%     rin=sum(rin,2);%now have sum of all pixels inside that cell for each frame
%     rin=squueze(rin);%now frame numb is dim 1 and movie numb is dim 2
%     si=sum(inmatrix,1);
%     si=sum(si,2);%number of pixels in this contour
%     si=repmat(si,size(rinout));%rep'd so can operate on rin
%     rin=rin./si;%gives mean inside each contour for each frame.
%     values(:,:,contournumber)=rin;
%     
%     rin=repmat(inmatrix,[1 1 size(df,3) size(df,4)]);%similar to above, but will be on laplacian version of images
%     rin(find(drin))=derivmovie(find(drin));%now have zeros outside cells & pixel values in approp. spots in this cell
%     rin=sum(drin,1);
%     rin=sum(drin,2);%now have sum of all pixels inside that cell for each frame
%     rin=squueze(drin);%now frame numb is dim 1 and movie numb is dim 2
%     rin=drin./si;
%     derivvalues(:,:,contournumber)=drin;
% 	for movienumber=1:size(pixels,4);
%         for framenumber=2:size(pixels,3);
%             frame=pixels(:,:,framenumber,movienumber)-pixels(:,:,framenumber-1,movienumber);
%             values(framenumber,movienumber,contournumber)=mean(frame(inmatrix));
%             frame=derivmovie(:,:,framenumber,movienumber);
%             x=sort(frame(inmatrix));
%             derivvalues(framenumber,movienumber,contournumber)=mean(x(round(.75*length(x)):end));
%         end
% 	end
end 

template=logical(template);
template=~template;%now 1's outside cells, 0s inside

%%%%%%%%%excluding from outcont in-pixels any pixels which are inside other
%%%%%%%%%cells
rtemplate=repmat(~template,[1,1,length(contoursmatrix)]);
io(rtemplate)=0;
io=logical(io);
rtemplate=[];%eliminating unneeded variable

for movienumber=1:size(pixels,4);
    for framenumber=1:size(pixels,3)-1;%-1 because this will be frame subtraction
        frame=pixels(:,:,framenumber+1,movienumber)-pixels(:,:,framenumber,movienumber);
%         frame2=derivmovie(:,:,framenumber,movienumber);
        backgrounds(framenumber,movienumber)=mean(frame(template));
%         derivmovie=imfilter(del2(imfilter(frame,h3)),h4);%2D filter of frame
        for contournumber = 1:(length(contoursmatrix));
            values(framenumber,movienumber,contournumber)=mean(frame(i(:,:,contournumber)));
            outvalues(framenumber,movienumber,contournumber)=mean(frame(io(:,:,contournumber)));
%             derivvalues(framenumber,movienumber,contournumber)=mean(derivmovie(i(:,:,contournumber)));
%             derivoutvalues(framenumber,movienumber,contournumber)=mean(derivmovie(io(:,:,contournumber)));
%             x=sort(frame2(io(:,:,contournumber)));
%             derivoutvalues(framenumber,movienumber,contournumber)=mean(x(round(.75*length(x)):end));
        end
    end
end

% for contournumber = 1:(length(contoursmatrix));
%     rin=repmat(io(1,1,contournumber),[1 1 size(df,3) size(df,4)]);
%     rin(find(rin))=df(find(rin));%now have pixel values in approp. spots in this cell
%     rin=sum(rin,1);
%     rin=sum(rin,2);%now have sum of all pixels inside that cell for each frame
%     rin=squueze(rin);%now frame numb is dim 1 and movie numb is dim 2
%     si=sum(io(:,:,contournumber),1);
%     si=sum(si,2);%number of pixels in this contour
%     si=repmat(si,size(rin));%rep'd so can operate on rin
%     rin=rin./si;%gives mean inside each contour for each frame.
%     outvalues(:,:,contournumber)=rin;
%     
%     rin=repmat(io(1,1,contournumber),[1 1 size(df,3) size(df,4)]);%similar to above, but will be on laplacian version of images
%     rin(find(drin))=derivmovie(find(drin));%now have zeros outside cells & pixel values in approp. spots in this cell
%     rin=sum(drin,1);
%     rin=sum(drin,2);%now have sum of all pixels inside that cell for each frame
%     rin=squueze(drin);%now frame numb is dim 1 and movie numb is dim 2
%     rin=drin./si;
%     derivoutvalues(:,:,contournumber)=drin;
% end 

% rin=repmat(template(1,1,contournumber),[1 1 size(df,3) size(df,4)]);
% rin(find(rin))=moviematrix(find(rin));%now have pixel values in approp. spots in this cell
% rin=sum(rin,1);
% rin=sum(rin,2);%now have sum of all pixels inside that cell for each frame
% rin=squueze(rin);%now frame numb is dim 1 and movie numb is dim 2
% si=sum(io(template,1));
% si=sum(si,2);%number of pixels in this contour
% si=repmat(si,size(rin));%rep'd so can operate on rin
% backgrounds=rin./si;%gives mean inside each contour for each frame.
toc