function [meanvalues, meanvalues2]=contsback (contoursmatrix,moviematrix)
%normalizes each movie, so that pixel values for each movie range from 0 to
%1.
%finds mean value in each contour (from 2D contoursmatrix
%which is a cell array of coordinates created in "findcells") 
%in each frame of each movie represented in 4D moviematrix (generated by
%"framesintomatrix" function).  Output is "meanvalues" which is a 3D matrix
%of (frames)x(movies)x(cellnumber)

[a b c d]=size(moviematrix);
moviematrix=double(moviematrix);

mini(:,:,1:d)=min(moviematrix(:,:,:,1:d),[],3);%beginning normalization process... normalize each movie within itself
mini=min(mini,[],2);
mini=squeeze(mini);
mini=min(mini,[],1);
mini=double(mini);
mini=repmat(mini,[a,1,b,c]);
mini=ipermute(mini,[1 4 2 3]);

minimized=moviematrix-mini;

maxi(:,:,1:d)=max(minimized(:,:,:,1:d),[],3);
maxi=max(maxi,[],2);
maxi=squeeze(maxi);
maxi=max(maxi,[],1);
maxi=double(maxi);
maxi=repmat(maxi,[a,1,b,c]);
maxi=ipermute(maxi,[1 4 2 3]);

normalized=minimized./maxi;
%a normalized version of "moviematrix"

template=zeros(256);

for contournumber = 1:(length(contoursmatrix));
    for ycounter=1:256;
        yc=ycounter(ones(1,256));
        in=inpolygon(1:256,yc,contoursmatrix{contournumber}(:,1),contoursmatrix{contournumber}(:,2));    
% 	    in2=find(in==.5);
% 	    in(in2)=0;
        inmatrix(ycounter,:)=in;%a 256x256 matrix with 1's at pixels inside a given contour (0's if not inside)        
	end
    template=inmatrix+template; %at end of the loop, will give a matrix with 0 for any pixel that is not in 
                                %any contour will be used to subtract background
    inmatrix=logical(inmatrix);
    for movienumber=1:size(normalized,4);
        for framenumber=1:size(normalized,3);
            frame=normalized(:,:,framenumber,movienumber);
            meanvalues(framenumber,movienumber,contournumber)=mean(frame(inmatrix));
        end
	end
end

template=logical(template);
% framebacks=zeros(size(normalized,3),size(normalized,4));

dm=diff(meanvalues,1,1);

for m=1:size(normalized,4);
    for f=1:size(normalized,3);
%         framebacks(f,m)=mean(normalized(f,m,:,:(~template)));
        fr=normalized(:,:,f,m);
        meanvalues2(f,m,:)= meanvalues(f,m,:)-mean(fr(~template));%meanvalues2 is same as meanvalues, 
                                                                  %but has background activity subtracted
    end 
end