function [linearpixels,framebackgrounds]=outsidecontours(contours,pixels);

% Finds pixels that are not inside contours.  Takes average of the values
% of those pixels in each frame of a movie.  Uses a "contours" file generated by
% either "findcells" or "labelcells" for contours.  Uses pixel values over
% a series of movies in the matrix "pixels" generated by "framesintomatrix".
% 
% Generates one value for each frame of each movie, which equals the
% average of all of the background in that frame.  (may want to plug in a
% diff(pixels,1,1) matrix - representing the slope btw each pixel in one frame
% and the next.)


pixels=double(pixels);
linearpixels=reshape(pixels,[size(pixels,1) size(pixels,2) (size(pixels,3)*size(pixels,4))]);%a series of frames, not broken into movies
% pixels=diff(pixels,1,3);%may want to comment out these two lines

for y=1:length(contours);
    a=size(contours{y},1);
    contours{y}(a+1,:)=contours{y}(1,:);
end %making each contour a full enclosed polygon... necessary???
    
template=zeros(256);
ii=zeros(256);
for x=1:length(contours);
    for z=1:256;
        zz=ones(1,256);
        zz=z*zz;
        i=inpolygon(1:256,zz,contours{x}(:,1),contours{x}(:,2));
        ii(z,:)=i;
    end
    template=ii+template;     
end %now have a 256x256 grid, with 1's wherever a pixel is inside a contour

%!! may want to combine into contourvalues.m, which has nearly the same operations... then make one more output matrix!

template=~template;
template=logical(template);

for a=1:size(linearpixels,3);
    vals=linearpixels(:,:,a);
    vals=vals(template); %creates a vector of values derived from pixels outside contours
    framebackgrounds(a)=mean(vals);
    linearpixels(:,:,a)=linearpixels(:,:,a)-mean(vals);
end
